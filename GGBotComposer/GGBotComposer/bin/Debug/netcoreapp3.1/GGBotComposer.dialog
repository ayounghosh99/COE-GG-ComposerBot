{
  "$kind": "Microsoft.AdaptiveDialog",
  "$designer": {
    "name": "GGBotComposer",
    "description": "",
    "id": "4pM5gc"
  },
  "autoEndDialog": true,
  "defaultResultProperty": "dialog.result",
  "triggers": [
    {
      "$kind": "Microsoft.OnConversationUpdateActivity",
      "$designer": {
        "id": "376720",
        "name": "Welcome"
      },
      "actions": [
        {
          "$kind": "Microsoft.Foreach",
          "$designer": {
            "id": "518944",
            "name": "Loop: for each item"
          },
          "itemsProperty": "turn.Activity.membersAdded",
          "actions": [
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "641773",
                "name": "Branch: if/else"
              },
              "condition": "string(dialog.foreach.value.id) != string(turn.Activity.Recipient.id)",
              "actions": [
                {
                  "$kind": "Microsoft.BeginDialog",
                  "$designer": {
                    "id": "UAiSWe"
                  },
                  "activityProcessed": true,
                  "dialog": "WelcomeDialog"
                }
              ]
            }
          ],
          "value": "dialog.foreach.value",
          "index": "dialog.foreach.index"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "Fbx8XO",
        "name": "ClaimStatus"
      },
      "intent": "ClaimStatus",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "Kgf0M2"
          },
          "activityProcessed": true,
          "dialog": "ClaimStatusDialog"
        }
      ],
      "condition": "=#ClaimStatus.Score >= 0.5"
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "8bMtqP",
        "name": "RegisterClaim"
      },
      "intent": "RegisterClaim",
      "condition": "=#RegisterClaim.Score >= 0.7",
      "actions": [
        {
          "$kind": "Microsoft.HttpRequest",
          "$designer": {
            "id": "IszHw1",
            "comment": "Ideally it should be redirected to the RegisterClaimDialog. Added funtionality here for testing purposes only. The logic shall be shifter to RegisterClaimDialog.\n"
          },
          "method": "POST",
          "url": "https://gssl-dev.outsystemsenterprise.com/AzurePOC/rest/POCAPI/SaveClaim",
          "body": {
            "VehicleRegistrationNo": "string",
            "PolicyNumber": "string",
            "InsuredFirstName": "string",
            "InsuredSurname": "string",
            "InsuredPrimaryContact": "string",
            "InsuredEmail": "string",
            "IsDriverSameAsInsured": true,
            "DriverFirstName": "string",
            "DriverLastName": "string",
            "DriverGender": "string",
            "DriverDateofBirth": "2014-12-31",
            "DriverContact": "string",
            "DriverEmail": "string",
            "DriverRelationship": "string",
            "DriversPermitNo": "string",
            "AccidentDate": "2014-12-31",
            "AccidentLocation": "string",
            "CauseOfAccident": "string",
            "Sketch": "NA==",
            "SketchFileName": "string"
          },
          "resultProperty": "dialog.api_response",
          "responseType": "json"
        },
        {
          "$kind": "Microsoft.IfCondition",
          "$designer": {
            "id": "UDDLwt",
            "comment": "Used Dummy Data for testing purposes. The Response received is OK.\n"
          },
          "condition": "=dialog.api_response.statusCode == 200",
          "actions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "hRlDCZ"
              },
              "activity": "${SendActivity_hRlDCZ()}"
            }
          ],
          "elseActions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "6OMf4S"
              },
              "activity": "${SendActivity_6OMf4S()}"
            }
          ]
        }
      ]
    },
    {
      "$kind": "Microsoft.OnQnAMatch",
      "$designer": {
        "id": "hDj5Rc"
      },
      "actions": [
        {
          "$kind": "Microsoft.IfCondition",
          "$designer": {
            "id": "IEvuSA"
          },
          "condition": "count(turn.recognized.answers[0].context.prompts) > 0",
          "actions": [
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "9WtGOt"
              },
              "property": "dialog.qnaContext",
              "value": "=turn.recognized.answers[0].context.prompts"
            },
            {
              "$kind": "Microsoft.TextInput",
              "$designer": {
                "id": "VanY7W"
              },
              "maxTurnCount": 3,
              "alwaysPrompt": true,
              "allowInterruptions": false,
              "prompt": "${TextInput_Prompt_abv4Ss()}",
              "property": "turn.qnaMultiTurnResponse"
            },
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "TCroPD"
              },
              "property": "turn.qnaMatchFromContext",
              "value": "=where(dialog.qnaContext, item, item.displayText == turn.qnaMultiTurnResponse)"
            },
            {
              "$kind": "Microsoft.DeleteProperty",
              "$designer": {
                "id": "8POtOd"
              },
              "property": "dialog.qnaContext"
            },
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "LCF5pN"
              },
              "condition": "turn.qnaMatchFromContext && count(turn.qnaMatchFromContext) > 0",
              "actions": [
                {
                  "$kind": "Microsoft.SetProperty",
                  "$designer": {
                    "id": "t7kNFO"
                  },
                  "property": "turn.qnaIdFromPrompt",
                  "value": "=turn.qnaMatchFromContext[0].qnaId"
                }
              ]
            },
            {
              "$kind": "Microsoft.EmitEvent",
              "$designer": {
                "id": "v8azwY"
              },
              "eventName": "activityReceived",
              "eventValue": "=turn.activity"
            }
          ],
          "elseActions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "LdCmOj"
              },
              "activity": "${SendActivity_3uBssN()}"
            }
          ]
        }
      ]
    },
    {
      "$kind": "Microsoft.OnUnknownIntent",
      "$designer": {
        "id": "vjYLIB",
        "name": "Unknown intent"
      },
      "actions": [
        {
          "$kind": "Microsoft.QnAMakerDialog",
          "$designer": {
            "id": "hOXl8Y"
          },
          "knowledgeBaseId": "=settings.qna.knowledgebaseid",
          "endpointKey": "=settings.qna.endpointkey",
          "hostname": "=settings.qna.hostname",
          "noAnswer": "Sorry, I did not find an answer.",
          "threshold": 0.3,
          "activeLearningCardTitle": "Did you mean:",
          "cardNoMatchText": "None of the above.",
          "cardNoMatchResponse": "Thanks for the feedback.",
          "top": 3,
          "isTest": false
        }
      ]
    }
  ],
  "generator": "GGBotComposer.lg",
  "id": "GGBotComposer",
  "recognizer": "GGBotComposer.lu.qna"
}
